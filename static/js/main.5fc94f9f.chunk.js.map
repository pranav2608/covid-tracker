{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/CountryPicker/CountryPicker.jsx","components/Chart/Chart.jsx","App.js","index.js","App.module.css","components/CountryPicker/CountryPicker.module.css","components/Chart/Chart.module.css","images/image.png"],"names":["module","exports","Cards","props","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","data","confirmed","value","duration","separator","Date","lastUpdate","toDateString","recovered","deaths","url","fetchData","country","a","changeableUrl","axios","get","fetchDailyData","map","date","reportDate","total","fetchCountries","countries","name","Countries","handleCountryChange","useState","setCountries","useEffect","fetchAPI","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","Chart","dailyData","setDailyData","initialDailyData","fetchMyAPI","barChart","labels","datasets","label","backgroundColor","options","legend","display","title","text","lineChart","length","borderColor","fill","App","state","setState","this","src","coronaImage","image","alt","CountryPicker","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gGACAA,EAAOC,QAAU,CAAC,UAAY,yBAAyB,KAAO,oBAAoB,SAAW,wBAAwB,UAAY,yBAAyB,OAAS,wB,oOCiFpJC,MA5Ef,SAAeC,GACb,OACE,yBAAKC,UAAWC,IAAOC,WACrB,kBAACC,EAAA,EAAD,CAAMD,WAAS,EAACE,QAAS,EAAGC,QAAQ,UAClC,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAWC,IAAMC,GAAI,GAAIC,GAAI,EAAGV,UAAWW,IAAGV,IAAOW,KAAOX,IAAOY,WAC5E,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,GAA9C,YAGA,kBAACF,EAAA,EAAD,CAAYG,QAAQ,MAClB,kBAAC,IAAD,CACEC,MAAO,EACPC,IAAKrB,EAAMsB,KAAKC,UAAUC,MAC1BC,SAAU,IACVC,UAAU,OAGd,kBAACV,EAAA,EAAD,CAAYC,MAAM,iBACf,IAAIU,KAAK3B,EAAMsB,KAAKM,YAAYC,gBAEnC,kBAACb,EAAA,EAAD,CAAYG,QAAQ,SAApB,wCAMJ,kBAACf,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAWC,IAAMC,GAAI,GAAIC,GAAI,EAAGV,UAAWW,IAAGV,IAAOW,KAAOX,IAAO4B,YAC5E,kBAACf,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,GAA9C,aAGA,kBAACF,EAAA,EAAD,CAAYG,QAAQ,MACjB,IACD,kBAAC,IAAD,CACEC,MAAO,EACPC,IAAKrB,EAAMsB,KAAKQ,UAAUN,MAC1BC,SAAU,IACVC,UAAU,OAGd,kBAACV,EAAA,EAAD,CAAYC,MAAM,iBACf,IAAIU,KAAK3B,EAAMsB,KAAKM,YAAYC,gBAEnC,kBAACb,EAAA,EAAD,CAAYG,QAAQ,SAApB,wCAMJ,kBAACf,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAWC,IAAMC,GAAI,GAAIC,GAAI,EAAGV,UAAWW,IAAGV,IAAOW,KAAOX,IAAO6B,SAC5E,kBAAChB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,GAA9C,UAGA,kBAACF,EAAA,EAAD,CAAYG,QAAQ,MAClB,kBAAC,IAAD,CACEC,MAAO,EACPC,IAAKrB,EAAMsB,KAAKS,OAAOP,MACvBC,SAAU,IACVC,UAAU,OAId,kBAACV,EAAA,EAAD,CAAYC,MAAM,iBACf,IAAIU,KAAK3B,EAAMsB,KAAKM,YAAYC,gBAEnC,kBAACb,EAAA,EAAD,CAAYG,QAAQ,SAApB,4C,2CCtENa,EAAM,iCAECC,EAAS,uCAAG,WAAOC,GAAP,2BAAAC,EAAA,6DACnBC,EAAgBJ,EAEhBE,IACFE,EAAa,UAAMJ,EAAN,sBAAuBE,IAJf,kBAQgDG,IAAMC,IAAIF,GAR1D,2BAQbd,KAAQC,EARK,EAQLA,UAAWO,EARN,EAQMA,UAAWC,EARjB,EAQiBA,OAAQH,EARzB,EAQyBA,WARzB,kBAUd,CAAEL,YAAWO,YAAWC,SAAQH,eAVlB,2HAAH,sDAgBTW,EAAc,uCAAG,8BAAAJ,EAAA,+EAEHE,IAAMC,IAAN,UAAaN,EAAb,WAFG,uBAElBV,EAFkB,EAElBA,KAFkB,kBAInBA,EAAKkB,KAAI,gBAAGjB,EAAH,EAAGA,UAAWQ,EAAd,EAAcA,OAAoBU,EAAlC,EAAsBC,WAAtB,MAA8C,CAAEnB,UAAWA,EAAUoB,MAAOZ,OAAQA,EAAOY,MAAOF,YAJxF,wHAAH,qDAUdG,EAAc,uCAAG,8BAAAT,EAAA,+EAEYE,IAAMC,IAAN,UAAaN,EAAb,eAFZ,uBAEVa,EAFU,EAElBvB,KAAQuB,UAFU,kBAInBA,EAAUL,KAAI,SAACN,GAAD,OAAaA,EAAQY,SAJhB,wHAAH,qD,iBCFZC,EArBG,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,oBAA0B,EACXC,mBAAS,IADE,mBACtCJ,EADsC,KAC3BK,EAD2B,KAW7C,OARAC,qBAAU,YACM,uCAAG,sBAAAhB,EAAA,kEACfe,EADe,SACIN,IADJ,6EAAH,qDAIdQ,KACC,IAGD,kBAACC,EAAA,EAAD,CAAapD,UAAWC,IAAOoD,aAC7B,kBAACC,EAAA,EAAD,CAAcC,aAAa,GAAGC,SAAU,SAACC,GAAD,OAAOV,EAAoBU,EAAEC,OAAOnC,SAC1E,4BAAQA,MAAM,IAAd,UACCqB,EAAUL,KAAI,SAACN,EAAS0B,GAAV,OAAgB,4BAAQC,IAAKD,EAAGpC,MAAOU,GAAUA,S,yBCiDzD4B,EAhED,SAAC,GAAyD,IAAD,IAAtDxC,KAAQC,EAA8C,EAA9CA,UAAWO,EAAmC,EAAnCA,UAAWC,EAAwB,EAAxBA,OAAUG,EAAc,EAAdA,QAAc,EACnCe,mBAAS,IAD0B,mBAC9Dc,EAD8D,KACnDC,EADmD,KAGrEb,qBAAU,YACQ,uCAAG,4BAAAhB,EAAA,sEACcI,IADd,OACX0B,EADW,OAGjBD,EAAaC,GAHI,2CAAH,qDAMhBC,KACC,IAEH,IAAMC,EAAW5C,EACf,kBAAC,MAAD,CACED,KAAM,CACJ8C,OAAQ,CAAC,WAAY,YAAa,UAClCC,SAAU,CACR,CACEC,MAAO,SACPC,gBAAiB,CACf,uBACA,uBACA,wBAEFjD,KAAM,CAACC,EAAUC,MAAOM,EAAUN,MAAOO,EAAOP,UAItDgD,QAAS,CACPC,OAAQ,CAAEC,SAAS,GACnBC,MAAO,CAAED,SAAS,EAAME,KAAK,oBAAD,OAAsB1C,OAGpD,KAEE2C,EAAYd,EAAUe,OAC1B,kBAAC,OAAD,CACExD,KAAM,CACJ8C,OAAQL,EAAUvB,KAAI,qBAAGC,QACzB4B,SAAU,CACR,CACE/C,KAAMyC,EAAUvB,KAAI,SAAClB,GAAD,OAAUA,EAAKC,aACnC+C,MAAO,WACPS,YAAa,UACbC,MAAM,GAER,CACE1D,KAAMyC,EAAUvB,KAAI,SAAClB,GAAD,OAAUA,EAAKS,UACnCuC,MAAO,SACPS,YAAa,MACbR,gBAAiB,uBACjBS,MAAM,OAKZ,KAEJ,OACE,yBAAK/E,UAAWC,IAAOC,WAAY+B,EAAUiC,EAAWU,I,kCC1B7CI,E,4MA5BbC,MAAQ,CACN5D,KAAM,GACNY,QAAS,I,EAQXc,oB,uCAAsB,WAAOd,GAAP,eAAAC,EAAA,sEACDF,EAAUC,GADT,OACdZ,EADc,OAEpB,EAAK6D,SAAS,CAAE7D,OAAMY,QAASA,IAFX,2C,wPAJDD,I,OAAbX,E,OACN8D,KAAKD,SAAS,CAAE7D,S,qIAUhB,OACE,yBAAKrB,UAAWC,IAAOC,WACrB,yBAAKkF,IAAKC,IAAarF,UAAWC,IAAOqF,MAAOC,IAAI,YACnDJ,KAAKF,MAAM5D,KAAKC,UAAa,kBAAC,EAAD,CAAOD,KAAM8D,KAAKF,MAAM5D,OAAW,gBACjE,kBAACmE,EAAD,CAAezC,oBAAqBoC,KAAKpC,sBACzC,kBAAC,EAAD,CAAO1B,KAAM8D,KAAKF,MAAM5D,KAAMY,QAASkD,KAAKF,MAAMhD,e,GAvBxCwD,IAAMC,WCPxBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U,mBCR1BnG,EAAOC,QAAU,CAAC,UAAY,uBAAuB,MAAQ,mBAAmB,UAAY,uBAAuB,OAAS,sB,mBCA5HD,EAAOC,QAAU,CAAC,YAAc,qC,mBCAhCD,EAAOC,QAAU,CAAC,UAAY,2B,mBCD9BD,EAAOC,QAAU,IAA0B,mC","file":"static/js/main.5fc94f9f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3tANC\",\"card\":\"Cards_card__2o5hu\",\"infected\":\"Cards_infected__1770y\",\"recovered\":\"Cards_recovered__1OwlS\",\"deaths\":\"Cards_deaths__1TKat\"};","import React from \"react\";\r\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\r\nimport cx from \"classnames\";\r\nimport CountUp from \"react-countup\";\r\nimport styles from \"./Cards.module.css\";\r\n\r\nfunction Cards(props) {\r\n  return (\r\n    <div className={styles.container}>\r\n      <Grid container spacing={3} justify=\"center\">\r\n        <Grid item component={Card} xs={12} md={3} className={cx(styles.card , styles.infected)}>\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Infected\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp\r\n                start={0}\r\n                end={props.data.confirmed.value}\r\n                duration={2.5}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(props.data.lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Number of Active Cases of COVID-19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n\r\n        <Grid item component={Card} xs={12} md={3} className={cx(styles.card , styles.recovered)}>\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Recovered\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              {\" \"}\r\n              <CountUp\r\n                start={0}\r\n                end={props.data.recovered.value}\r\n                duration={2.5}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(props.data.lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Number of Recoveries from COVID-19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n\r\n        <Grid item component={Card} xs={12} md={3} className={cx(styles.card , styles.deaths)}>\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Deaths\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp\r\n                start={0}\r\n                end={props.data.deaths.value}\r\n                duration={2.5}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(props.data.lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Number of Deaths caused by COVID-19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Cards;\r\n","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) => {\r\n  let changeableUrl = url;\r\n\r\n  if (country) {\r\n    changeableUrl = `${url}/countries/${country}`;\r\n  }\r\n\r\n  try {\r\n    const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableUrl);\r\n\r\n    return { confirmed, recovered, deaths, lastUpdate };\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport const fetchDailyData = async () => {\r\n  try {\r\n    const { data } = await axios.get(`${url}/daily`);\r\n\r\n    return data.map(({ confirmed, deaths, reportDate: date }) => ({ confirmed: confirmed.total, deaths: deaths.total, date }));\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport const fetchCountries = async () => {\r\n  try {\r\n    const { data: { countries } } = await axios.get(`${url}/countries`);\r\n\r\n    return countries.map((country) => country.name);\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};","import React, { useState, useEffect } from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\n\r\nimport { fetchCountries } from '../../api';\r\n\r\nimport styles from './CountryPicker.module.css';\r\n\r\nconst Countries = ({ handleCountryChange }) => {\r\n  const [countries, setCountries] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setCountries(await fetchCountries());\r\n    };\r\n\r\n    fetchAPI();\r\n  }, []);\r\n\r\n  return (\r\n    <FormControl className={styles.formControl}>\r\n      <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n        <option value=\"\">Global</option>\r\n        {countries.map((country, i) => <option key={i} value={country}>{country}</option>)}\r\n      </NativeSelect>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default Countries;","import React, { useState, useEffect } from \"react\";\r\nimport { Line, Bar } from \"react-chartjs-2\";\r\n\r\nimport { fetchDailyData } from \"../../api\";\r\n\r\nimport styles from \"./Chart.module.css\";\r\n\r\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\r\n  const [dailyData, setDailyData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchMyAPI = async () => {\r\n      const initialDailyData = await fetchDailyData();\r\n\r\n      setDailyData(initialDailyData);\r\n    };\r\n\r\n    fetchMyAPI();\r\n  }, []);\r\n\r\n  const barChart = confirmed ? (\r\n    <Bar\r\n      data={{\r\n        labels: [\"Infected\", \"Recovered\", \"Deaths\"],\r\n        datasets: [\r\n          {\r\n            label: \"People\",\r\n            backgroundColor: [\r\n              \"rgba(0, 0, 255, 0.5)\",\r\n              \"rgba(0, 255, 0, 0.5)\",\r\n              \"rgba(255, 0, 0, 0.5)\",\r\n            ],\r\n            data: [confirmed.value, recovered.value, deaths.value],\r\n          },\r\n        ],\r\n      }}\r\n      options={{\r\n        legend: { display: false },\r\n        title: { display: true, text: `Current state in ${country}` },\r\n      }}\r\n    />\r\n  ) : null;\r\n\r\n  const lineChart = dailyData.length ? (\r\n    <Line\r\n      data={{\r\n        labels: dailyData.map(({ date }) => date),\r\n        datasets: [\r\n          {\r\n            data: dailyData.map((data) => data.confirmed),\r\n            label: \"Infected\",\r\n            borderColor: \"#3333ff\",\r\n            fill: true,\r\n          },\r\n          {\r\n            data: dailyData.map((data) => data.deaths),\r\n            label: \"Deaths\",\r\n            borderColor: \"red\",\r\n            backgroundColor: \"rgba(255, 0, 0, 0.5)\",\r\n            fill: true,\r\n          },\r\n        ],\r\n      }}\r\n    />\r\n  ) : null;\r\n\r\n  return (\r\n    <div className={styles.container}>{country ? barChart : lineChart}</div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React from 'react';\n\n\nimport Cards from './components/Cards/Cards'\nimport CountryPicker from './components/CountryPicker/CountryPicker'\nimport Chart from './components/Chart/Chart';\nimport coronaImage from './images/image.png'\nimport { fetchData } from './api/index';\nimport styles from './App.module.css';\n\n\n\nclass App extends React.Component {\n  state = {\n    data: {},\n    country: '',\n  }\n\n  async componentDidMount() {\n    const data = await fetchData();\n    this.setState({ data });\n  }\n\n  handleCountryChange = async (country) => {\n    const data = await fetchData(country);\n    this.setState({ data, country: country });\n  }\n\n  render() {\n    \n    return (\n      <div className={styles.container}>\n        <img src={coronaImage} className={styles.image} alt=\"COVID19\"/>\n        {this.state.data.confirmed? ( <Cards data={this.state.data} />): \"Loading......\"}\n        <CountryPicker handleCountryChange={this.handleCountryChange} />\n        <Chart data={this.state.data} country={this.state.country} /> \n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__-s_JI\",\"image\":\"App_image__3d5gf\",\"particles\":\"App_particles__3aYLM\",\"center\":\"App_center__v_PAK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__3agwG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1VMlT\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}